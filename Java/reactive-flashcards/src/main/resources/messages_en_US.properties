# Generic messages
generic=An unknown error occurred during processing
generic.notFound=Resource not found
generic.methodNotAllow=The method [{}] is not allowed for this resource
generic.badRequest=Your request have invalid parameters
generic.maxRetries=The number of retries has been exceeded

# User messages
user.notFound=User with {0} {1} not found
user.emailAlreadyUsed=email {0} is already in use by another user.


# Validation messages - User
user.neededId=Report a valid user identifier
NotBlank.userRequest.email=Provide an email for the user
NotBlank.userRequest.name=Provide a name for the user
Size.userRequest.email=The user's email must be between {2} and {1} characters
Size.userRequest.name=The user's name must be between {2} and {1} characters
Email.userRequest.email=Provide a valid email for the user

# Validation messages - UserPage
Min.userPageRequest.limit=The number of records per page must be at least {1}
Max.userPageRequest.limit=The number of records per page must be at most {1}
PositiveOrZero.userPageRequest.page=The page number must be 0 or greater

# Deck Messages
deck.notFound=The deck with identifier {0} not found

# Validation messages - Deck
deck.neededId=Report a valid deck identifier
NotBlank.deckRequest.description=Report a description for this deck
NotBlank.deckRequest.name=Report a name for this deck
NotBlank.deckRequest.cards.back=Report a card answer.
NotBlank.deckRequest.cards.front=Report the card question.
Size.deckRequest.description=The deck's description must be between {2} and {1} characters
Size.deckRequest.name=the deck's name must be between {2} and {1} characters
Size.deckRequest.cards=One deck must be between {2} e {1} cards.
Size.deckRequest.cards.back=The card's answer must be between {2} and {1} characters.
Size.deckRequest.cards.front=The card's question must be between {2} and {1} characters.
Notnull.deckRequest.cards=Informe os cards do deck.

# Card messages

# Validation messages - Card
NotBlank.cardRequest.back=Report a card answer.
NotBlank.cardRequest.front=Report the card question.
Size.cardRequest.back=The card's answer must be between {2} and {1} characters.
Size.cardRequest.front=The card's question must be between {2} and {1} characters.

# Study messages
study.notFound=The study with identifier {0} not found
study.deckPending=User {0} have deck {1} pending, finish your last started deck to start another.

# Validation messages - Study
study.neededId=Report a valid deck identifier

# StudyDeck messages
studyDeck.notFound=User {0} doesn't have any pending study for deck {1}

# studyQuestion messages
studyQuestion.notFound=Study {0} has already been finished.